name: 'Google Cloud SQL Proxy with workload identity'
description: 'Start Google CloudSQL Proxy using Google Workload Identity Federation short-lived credentials'

branding:
  icon: 'database'
  color: 'red'

inputs:
  instance:
    description: 'CloudSQL instance'
    required: true
    type: string
  port:
    description: 'Listen on port'
    required: false
    default: 5432
    type: number
  proxy-version:
    description: 'CloudSQL Proxy Version'
    required: false
    default: v2.3.0
    type: string
  extra-args:
    description: 'Extra CloudSQL Proxy arguments'
    required: false
    type: string

runs:
  using: 'composite'
  steps:
    - name: Start Google Cloud SQL Proxy
      shell: bash
      run: |
        # Download Linux binary
        wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/${{ inputs.proxy-version }}/cloud-sql-proxy.linux.amd64 -O cloud-sql-proxy        
        chmod +x cloud-sql-proxy

        # Start Cloud SQL Proxy
        ./cloud-sql-proxy --port ${{ inputs.port }} ${{ inputs.extra-args }} {{ inputs.instance }} &

        # wait until connections are accepted
        sleep 3
        isready=0
        for i in {1..10}; do
          echo "Wait for connections to be ready ... $i/10"
          (${{ github.action_path }}/wait-for-it.sh --quiet --timeout=3 --host=127.0.0.1 --port=${{ inputs.port }} || exit $?) && true # escape bash's pipefail
          isready=$?
          if [[ $isready -eq 0 ]]; then
            break
          fi
          sleep 2
        done

        # exit with error code if we couldn't connect
        if [[ $isready -ne 0 ]]; then
          exit $isready 
        fi
